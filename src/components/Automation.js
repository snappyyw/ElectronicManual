import React from "react";
import ReactPlayer from "react-player";

function Automation() {
  return (
    <div className={"body"}>
      <h1 className="title">Создание приложения автоматизации</h1>
      <ReactPlayer
        height="500px"
        width="100%"
        controls="true"
        url="https://www.youtube.com/watch?v=swUaWGK28MY"
      />
      <h3 className={"subtitle"}>Материал к видео:</h3>
      <p>
        Продолжим знакомство с классом Robot. снятие скриншотов мы науз от
        прошлом занятии. Пришло время научиться пользоваться еще тремя
        интересными возможностями класса Robot:
        <br />
        1. Нажатие клавиш клавиатуры.
        <br />
        2. Перемещение курсора мыши.
        <br />
        3. Нажатие клавиш мыши.
      </p>
      <p>
        Класс Robot позволяет нажимать кнопки мыши, перемещать курсор мыши,
        использовать клавиатуру. И все это будет делать ваша программа!
        Программа может работать в скрытом режиме и вмешиваться в действия
        пользователя. А может заменить пользователя в выполнении некоторых
        действий. Например, можно перемещать курсор по окружности. Пользователь
        будет видеть перемещение курсора, по не сможет "перехватить" курсор у
        программы. Можно переместить курсор мыши в нужную позицию и нажать
        кнопку мыши. Таким образом, можно закрыть окно или запустить другое
        приложение. У операционной системы Windows имеется много комбинаций
        горячих клавиш. Посмотреть их полный список можно через поисковую
        систему, если ввести запрос: “горячие клавиши Windows”. Примеры:
        <br />
        Alt+F4 — Закрыть окно
        <br />
        Win+D — Свернуть все окна
        <br />
        Win+E — Открыть Мой компьютер
      </p>
      <p>
        Это лишь начало большого списка возможностей горячих клавиш Windows. С
        помощью класса Robot можно нажимать отдельные клавиши и комбинации
        клавиш. В дополнение к горячим клавишам можно перемещать курсор мыши в
        нужную позицию и выполнять действие с помощью кнопок мыши. Текст можно
        вводить с помощью одиночных нажатий клавиш. Чтобы научиться
        автоматизировать действия пользователя — необходимо максимум действий
        выполнять с помощью горячих клавиш Windows и одиночных нажатий клавиш
        для ввода текста. Управление мышью является хорошим дополнением,
        сложность работы с ней — точное перемещение курсора мыши в нужную
        позицию Рассмотрим последовательность действий для запуска Калькулятора
        Windows:
        <br />
        1. Нажать комбинацию клавиш Win+R, откроется окно Выполнить.
        <br />
        2. В поле для ввода может быть текст, поэтому требуется нажать клавишу
        Backspace, чтобы его очистить.
        <br />
        Далее нажимаем последовательно клавиши C, A, L, C, вводим calc.
        <br />
        4. Нажимаем клавишу Enter для запуска Калькулятора Windows.
      </p>
      <p>
        На примере приложения автоматизации мы рассмотрим возможности класса
        Robot, а. также научимся запускать другие приложения из программного
        кода. Запуск внешних. приложений всегда проще сделать, указав путь к
        приложению и выполнив старт, чем использовать класс Robot
      </p>

      <p>
        Описание задачи. Требуется создать приложение, которое выполняет
        несколько действий автоматически. В верхнем левом углу экрана мы
        создадим маленькое окно JFrame и добавим на него пять кнопок.
      </p>

      <p>
        Кнопки: Браузер, Мышь, Калькулятор, Мигание, Выход. Кнопка Браузер будет
        автоматически открывать нужный сайт. Кнопка Мышь должна перемещать
        курсор мыши по диагонали и нажимать на кнопку Браузер. Кнопка
        Калькулятор запустит калькулятор, Уаз; и через несколько секунд закроет
        его. Кнопка Мигание будет мигать лампочками кнопок CapsLock, NumLock,
        ScrollLock. Кнопка Выход завершит работу нашего приложения.
      </p>
      <p>
        Приступим к написанию программного кода нашего приложения. Создадим
        новый проект lession7 и добавим к нему новый класс prog. Сверху добавим
        необходимые библиотеки.
      </p>
      <p>
        Первым этапом создадим интерфейс нашего приложения. Маленькое окно
        JFrame, которое будет размещаться в левом верхнем углу экрана. Внутри
        окна будут располагаться пять кнопок. Сразу под блоком try-catch добавим
        код
      </p>

      <p>
        Когда мы создавали приложение Калькулятор. то использовали произвольное
        размещение кнопок. Произвольное размещение предполагает, что вы
        самостоятельно указываете отступ слева и сверху. Часто бывает удобно
        пользоваться автоматическим размещением элементов на форме — менеджером
        компоновки. Метод setLayout() устанавливает вариант размещения элементов
        формы. Если внутри круглых скобок указать null, то включается
        возможность самостоятельного размещения элементов формы.
      </p>
      <p>
        Значение null использовалось при создании Калькулятора. FlowLayout
        менеджер устанавливает компоненты слева направо и при заполнении
        переходит на строку вниз. Другими словами, все пять кнопок будут
        размещаться автоматически слева направо.
      </p>
      <p>
        Схема добавления кнопок к окну уже использовалась ранее в приложении
        Калькулятор. Создаём массив из пяти кнопок. Перебираем массив в цикле.
        Создаём новую кнопку. Назначаем для кнопки имя. Обратите внимание, что
        текстовая надпись на кнопке и имя — это разные вещи! Имя кнопки мы будем
        использовать для определения нажатой кнопки. К букве “b” прибавляется
        значение счётчика цикла. Таким образом, кнопки получат наименования: b0,
        b1, b2, b3, b4. К каждой кнопке подключается обработчик события при
        нажатии на кнопку. В обработчике события определяем нажатую кнопку и
        получаем сё имя. Имя попадает в переменную строкового типа пате. Если
        была нажата кнопка с именем 50 — запускаем браузер, если b1 — перемещаем
        курсор мыши и нажимаем кнопку мыши и т.д. На данном этапе конструкция
        if-else содержит пустые фигурные скобки. Мы будем помешать в. них
        программный код вторым этапом, когда создание интерфейса будет
        завершено. В самом конце цикла добавляем кнопку к окну.
      </p>
      <p>
        Указываем текстовые надписи на кнопках. С помощью метода pack()
        автоматически устанавливаем размеры окна. При вызове этого метода
        размеры окна подстраиваются под размещенные на нём элементы.
        Устанавливаем операцию при закрытии окна. И выводим окно. На этом
        построение интерфейса приложения завершено. Можно запустить приложение и
        проверить результат.
      </p>

      <p>
        Далее переходим к кнопке Браузер. При нажатии на кнопку должен
        запускаться браузер и открываться сайт Клуба Программистов, club.1c.ru В
        Java имеется возможность запустить внешнее приложение, указав путь к
        нему.
      </p>
      <p>
        Запуск внешнего приложения происходит внутри конструкции try-catch с
        помощью класса ProcessBuilder. Запуск происходит при вызове метода
        start(). Первый параметр — это путь к запускаемому файлу. В данном
        случае запускается браузер Google Chrome. Значение второго параметра
        передаётся запускаемому приложению — это адрес сайта. Обратите внимание,
        что второй параметр может не указываться! Таким способом можно запускать
        и другие приложения.
      </p>
      <p>
        При нажатии на кнопку Мышь курсор мыши перемещается вверх по диагонали,
        а далее происходит нажатие левой клавишей мыши на кнопку Браузер. На
        этот раз браузер будет запущен с помощью класса Robot. Для установки
        курсора мыши в нужное место экрана используется метод mouseMove().
        Обращение к методу идёт через переменную типа Robot. Указывающие два
        параметра: первый — отступ слева (Х), второй — отступ сверху (у). Метод
        delay() выполняет временную задержку в тысячных секунды, Если перемешать
        Курсор без задержки, то он мгновенно переместится в конечную точку, и мы
        не увидим его движения. Перемещение вверх по диагонали осуществляется в
        цикле Гог, который выполняет 500 шагов. С каждым шагом курсор смещается
        на один пиксель влево и на один пиксель вверх. После цикла устанавливаем
        курсор по координатам Х:50, У:30. В этом случае курсор мыши должен
        оказаться над кнопкой Браузер. Если курсор мыши не попадает точно на
        кнопку Браузер — подкорректируйте координаты курсора! Далее нажимаем
        левую клавишу мыши. Нажатие кнопки мыши происходит методом mousePress(),
        отпускание Кнопки мыши происходит методом mousePress(). Обратите
        внимание, что нажатие в программном коде осуществляется точно также, как
        это делает пользователь. Сначала нажимаем кнопку, некоторое время держим
        (задержка) и потом отпускаем кнопку. Не забывайте после нажатия кнопки
        делать временную задержку!
      </p>
      <p>
        Хотя бы пятую долю секунды (200 тысячных секунды). После задержки не
        забывайте отпускать кнопку! Если вы будите только нажимать кнопки в
        программном коде, но будите забывать их отпускать — мышь может перестать
        нормалью работать И возможно понадобится перезагрузка компьютера. Эти
        правила требуется выполнять и при работе с клавиатурой!
      </p>
      <p>
        Класс Robot весьма интересный и полезный инструмент! На этих двух
        занятиях мы познакомились с основными его возможностями. В итоге мы
        можем манипулировать мышью, клавиатурой, снимать скриншоты, запускать
        внешние приложения и создавать приложения, работающие в скрытом режиме.
        При желании все эти знания можно воплотить. в одном приложении,
        Пытайтесь реализовать ваши задумки и тренируйтесь, пытаясь решить
        поставленную задачу
      </p>
    </div>
  );
}

export default Automation;
